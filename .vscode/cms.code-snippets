{
  // Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Create containers components": {
    "prefix": "react-container-folder",
    "body": [
      "import React, { type HTMLAttributes } from 'react';",
      "import cls from 'classnames';",
      "import type { PropsWithChildren } from 'react'",
      "",
      "export interface I${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}Props",
      "extends HTMLAttributes<HTMLDivElement> {}",
      "",
      "export const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}: React.FunctionComponent<",
      "PropsWithChildren<I${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}Props>",
      "> = ({ children, className, ...props }) => {",
      "return (",
      "<div {...props} className={cls(className)}>",
      "${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}",
      "</div>",
      ");",
      "};"
    ]
  },
  "Create pages": {
    "prefix": "react-page",
    "body": [
      "import React from 'react';",
      "",
      "const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/capitalize}/}: React.FunctionComponent",
      " = () => {",
      "return (",
      "<div className='p-${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}'>",
      "${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/capitalize}/}",
      "</div>",
      ");",
      "};",
      "",
      "export default ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/capitalize}/};"
    ]
  }
}
